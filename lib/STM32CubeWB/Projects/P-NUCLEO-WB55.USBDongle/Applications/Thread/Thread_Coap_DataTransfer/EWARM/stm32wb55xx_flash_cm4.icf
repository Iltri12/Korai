 /* Memory map of the FW_M4 
 *
 * 0x2003FFFF---------------------------------------|
 *           | REGION_SECURE MO                     |  
 * 0x200327FF---------------------------------------|
 *           | Region_RAM2aRet_SHARED               |
 * 0x20030000---------------------------------------|
 
 /*-CPU Vector Table-*/
define symbol __ICFEDIT_intvec_start__ = 0x08000000;

/*-Memory Regions- read only */
define symbol __ICFEDIT_region_ROM_start__ = 0x08000000;
define symbol __ICFEDIT_region_ROM_end__   = 0x0807FFFF;

/*-Memory Regions- read write */
define symbol __ICFEDIT_region_RAM_start__ = 0x20000004; 
define symbol __ICFEDIT_region_RAM_end__   = 0x2002FFFF;

define symbol __ICFEDIT_region_RAM_SHARED_start__ = 0x20030000;
define symbol __ICFEDIT_region_RAM_SHARED_end__   = 0x200327FF;

/*-Sizes-*/
define symbol __ICFEDIT_size_cstack__ = 0x1000;
define symbol __ICFEDIT_size_heap__   = 0x400;

define memory mem with size = 4G;

define region ROM_region   = mem:[from __ICFEDIT_region_ROM_start__   to __ICFEDIT_region_ROM_end__];
define region RAM_region   = mem:[from __ICFEDIT_region_RAM_start__   to __ICFEDIT_region_RAM_end__];
define region RAM_SHARED_region   = mem:[from __ICFEDIT_region_RAM_SHARED_start__   to __ICFEDIT_region_RAM_SHARED_end__];

define block CSTACK    with alignment = 8, size = __ICFEDIT_size_cstack__   { };
define block HEAP      with alignment = 8, size = __ICFEDIT_size_heap__     { };

initialize by copy { readwrite };
do not initialize  { section .noinit,
                     section MAPPING_TABLE,
                     section MB_MEM1 };

place at address mem:__ICFEDIT_intvec_start__ { readonly section .intvec };
place at address mem:__ICFEDIT_region_RAM_SHARED_start__ { section MAPPING_TABLE };

place in ROM_region        { readonly };
place in RAM_region        { readwrite,block CSTACK, block HEAP };
place in RAM_SHARED_region   { section MB_MEM1};
place in RAM_SHARED_region   { section MB_MEM2};
